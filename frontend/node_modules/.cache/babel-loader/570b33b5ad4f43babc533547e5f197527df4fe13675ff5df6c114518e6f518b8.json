{"ast":null,"code":"var _jsxFileName = \"E:\\\\STS\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n/*mport React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      localStorage.setItem(\"token\", token);\r\n    } else {\r\n      localStorage.removeItem(\"token\");\r\n    }\r\n  }, [token]);\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, setToken, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};*/\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch tasks with a valid token\n  const fetchTasks = async jwtToken => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/tasks/\", {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        }\n      });\n      setTasks(res.data);\n    } catch (err) {\n      console.error(\"Failed to fetch tasks after login:\", err);\n    }\n  };\n\n  // Login user and load tasks\n  const loginAndLoad = async (username, password) => {\n    const res = await axios.post(\"http://localhost:8000/token\", new URLSearchParams({\n      username,\n      password\n    }), {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    });\n    const newToken = res.data.access_token;\n    setToken(newToken);\n    await fetchTasks(newToken); // fetch tasks after login\n  };\n\n  // Sync token with localStorage\n  useEffect(() => {\n    if (token) localStorage.setItem(\"token\", token);else localStorage.removeItem(\"token\");\n  }, [token]);\n\n  // Logout function\n  const logout = () => {\n    setToken(null);\n    setTasks([]);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      setToken,\n      tasks,\n      setTasks,\n      loginAndLoad,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"kQWmoErpBTHctPVM70+q8d9xThc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","tasks","setTasks","fetchTasks","jwtToken","res","get","headers","Authorization","data","err","console","error","loginAndLoad","username","password","post","URLSearchParams","newToken","access_token","setItem","removeItem","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/STS/frontend/src/context/AuthContext.js"],"sourcesContent":["/*mport React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      localStorage.setItem(\"token\", token);\r\n    } else {\r\n      localStorage.removeItem(\"token\");\r\n    }\r\n  }, [token]);\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, setToken, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};*/\r\n\r\nimport React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  // Fetch tasks with a valid token\r\n  const fetchTasks = async (jwtToken) => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:8000/tasks/\", {\r\n        headers: { Authorization: `Bearer ${jwtToken}` },\r\n      });\r\n      setTasks(res.data);\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch tasks after login:\", err);\r\n    }\r\n  };\r\n\r\n  // Login user and load tasks\r\n  const loginAndLoad = async (username, password) => {\r\n    const res = await axios.post(\r\n      \"http://localhost:8000/token\",\r\n      new URLSearchParams({ username, password }),\r\n      {\r\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      }\r\n    );\r\n    const newToken = res.data.access_token;\r\n    setToken(newToken);\r\n    await fetchTasks(newToken); // fetch tasks after login\r\n  };\r\n\r\n  // Sync token with localStorage\r\n  useEffect(() => {\r\n    if (token) localStorage.setItem(\"token\", token);\r\n    else localStorage.removeItem(\"token\");\r\n  }, [token]);\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    setToken(null);\r\n    setTasks([]);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ token, setToken, tasks, setTasks, loginAndLoad, logout }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACW,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;EACzE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMe,UAAU,GAAG,MAAOC,QAAQ,IAAK;IACrC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,8BAA8B,EAAE;QAC1DC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUJ,QAAQ;QAAG;MACjD,CAAC,CAAC;MACFF,QAAQ,CAACG,GAAG,CAACI,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEF,GAAG,CAAC;IAC1D;EACF,CAAC;;EAED;EACA,MAAMG,YAAY,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACjD,MAAMV,GAAG,GAAG,MAAMf,KAAK,CAAC0B,IAAI,CAC1B,6BAA6B,EAC7B,IAAIC,eAAe,CAAC;MAAEH,QAAQ;MAAEC;IAAS,CAAC,CAAC,EAC3C;MACER,OAAO,EAAE;QAAE,cAAc,EAAE;MAAoC;IACjE,CACF,CAAC;IACD,MAAMW,QAAQ,GAAGb,GAAG,CAACI,IAAI,CAACU,YAAY;IACtCrB,QAAQ,CAACoB,QAAQ,CAAC;IAClB,MAAMf,UAAU,CAACe,QAAQ,CAAC,CAAC,CAAC;EAC9B,CAAC;;EAED;EACA7B,SAAS,CAAC,MAAM;IACd,IAAIQ,KAAK,EAAEE,YAAY,CAACqB,OAAO,CAAC,OAAO,EAAEvB,KAAK,CAAC,CAAC,KAC3CE,YAAY,CAACsB,UAAU,CAAC,OAAO,CAAC;EACvC,CAAC,EAAE,CAACxB,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMyB,MAAM,GAAGA,CAAA,KAAM;IACnBxB,QAAQ,CAAC,IAAI,CAAC;IACdI,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEV,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IACnBC,KAAK,EAAE;MAAE3B,KAAK;MAAEC,QAAQ;MAAEG,KAAK;MAAEC,QAAQ;MAAEW,YAAY;MAAES;IAAO,CAAE;IAAA3B,QAAA,EAEjEA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChC,EAAA,CAjDWF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}