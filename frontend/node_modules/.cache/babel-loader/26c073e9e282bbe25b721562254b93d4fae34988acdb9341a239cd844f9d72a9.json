{"ast":null,"code":"var _jsxFileName = \"E:\\\\STS\\\\frontend\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nfunction App() {\n  const BACKEND_URL = \"http://127.0.0.1:8000\";\n\n  // State variables\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"personal\");\n  const [priority, setPriority] = useState(\"Low\");\n  const [statusFilter, setStatusFilter] = useState(\"\");\n  const [categoryFilter, setCategoryFilter] = useState(\"\");\n  const [priorityFilter, setPriorityFilter] = useState(\"\");\n  const [summary, setSummary] = useState({\n    total_tasks: 0,\n    completed_tasks: 0,\n    pending_tasks: 0,\n    completion_rate_percent: 0,\n  });\n\n  // Fetch tasks based on filters\n  function fetchTasks() {\n    if (priorityFilter) {\n      // Fetch tasks by priority\n      fetch(`${BACKEND_URL}/tasks-by-priority/?priority=${priorityFilter}`)\n        .then((res) => {\n          if (!res.ok) {\n            if (res.status === 404) return [];\n            throw new Error(\"No tasks found for this priority\");\n          }\n          return res.json();\n        })\n        .then((data) => setTasks(data))\n        .catch(() => setTasks([]));\n    } else {\n      // Fetch filtered tasks by category and status\n      const url = new URL(`${BACKEND_URL}/filter-tasks/`);\n      if (categoryFilter) url.searchParams.append(\"category\", categoryFilter);\n      if (statusFilter !== \"\") url.searchParams.append(\"status\", statusFilter === \"true\");\n      fetch(url.toString())\n        .then((res) => (res.ok ? res.json() : []))\n        .then((data) => setTasks(data))\n        .catch(() => setTasks([]));\n    }\n  }\n\n  // Fetch summary info\n  function fetchSummary() {\n    fetch(BACKEND_URL + \"/tasks-summary/\")\n      .then((res) => res.json())\n      .then((data) => setSummary(data))\n      .catch(() =>\n        setSummary({\n          total_tasks: 0,\n          completed_tasks: 0,\n          pending_tasks: 0,\n          completion_rate_percent: 0,\n        })\n      );\n  }\n\n  // Load tasks and summary on filter changes\n  useEffect(() => {\n    fetchTasks();\n    fetchSummary();\n  }, [priorityFilter, categoryFilter, statusFilter]);\n\n  // Add a new task\n  function handleAddTask() {\n    if (title.trim() === \"\") return;\n\n    const newTask = {\n      title,\n      description,\n      category,\n      priority,\n      status: false,\n    };\n\n    fetch(BACKEND_URL + \"/tasks/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify([newTask]), // backend expects array\n    })\n      .then((res) => {\n        if (!res.ok) throw new Error(\"Failed to create task\");\n        return res.json();\n      })\n      .then(() => {\n        setTitle(\"\");\n        setDescription(\"\");\n        setCategory(\"personal\");\n        setPriority(\"Low\");\n        fetchTasks();\n        fetchSummary();\n      })\n      .catch((err) => alert(\"Error adding task: \" + err.message));\n  }\n\n  // Toggle task completion\n  function toggleComplete(task) {\n    fetch(`${BACKEND_URL}/tasks/${task.id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ ...task, status: !task.status }),\n    })\n      .then(() => {\n        fetchTasks();\n        fetchSummary();\n      })\n      .catch(() => alert(\"Failed to update task\"));\n  }\n\n  // Delete task\n  function deleteTask(taskId) {\n    fetch(`${BACKEND_URL}/tasks/${taskId}`, { method: \"DELETE\" })\n      .then(() => {\n        fetchTasks();\n        fetchSummary();\n      })\n      .catch(() => alert(\"Failed to delete task\"));\n  }\n\n  return React.createElement(\n    \"div\",\n    { style: { maxWidth: 700, margin: \"auto\", fontFamily: \"Arial, sans-serif\", padding: 20 } },\n\n    React.createElement(\"h2\", null, \"Smart Task Tracker\"),\n\n    // Summary\n    React.createElement(\n      \"div\",\n      {\n        style: {\n          marginBottom: 20,\n          padding: 10,\n          backgroundColor: \"#f0f0f0\",\n          borderRadius: 6,\n        },\n      },\n      React.createElement(\"div\", null, `Total Tasks: ${summary.total_tasks}`),\n      React.createElement(\"div\", null, `Completed: ${summary.completed_tasks}`),\n      React.createElement(\"div\", null, `Pending: ${summary.pending_tasks}`),\n      React.createElement(\"div\", null, `Completion Rate: ${summary.completion_rate_percent}%`)\n    ),\n\n    // Filters\n    React.createElement(\n      \"div\",\n      { style: { marginBottom: 20 } },\n\n      React.createElement(\"label\", null, \"Filter Priority: \"),\n      React.createElement(\n        \"select\",\n        {\n          value: priorityFilter,\n          onChange: (e) => setPriorityFilter(e.target.value),\n          style: { marginRight: 20 },\n        },\n        React.createElement(\"option\", { value: \"\" }, \"All\"),\n        React.createElement(\"option\", { value: \"Low\" }, \"Low\"),\n        React.createElement(\"option\", { value: \"Medium\" }, \"Medium\"),\n        React.createElement(\"option\", { value: \"High\" }, \"High\")\n      ),\n\n      React.createElement(\"label\", null, \"Filter Category: \"),\n      React.createElement(\n        \"select\",\n        {\n          value: categoryFilter,\n          onChange: (e) => setCategoryFilter(e.target.value),\n          style: { marginRight: 20 },\n        },\n        React.createElement(\"option\", { value: \"\" }, \"All\"),\n        React.createElement(\"option\", { value: \"personal\" }, \"Personal\"),\n        React.createElement(\"option\", { value: \"work\" }, \"Work\")\n      ),\n\n      React.createElement(\"label\", null, \"Filter Status: \"),\n      React.createElement(\n        \"select\",\n        {\n          value: statusFilter,\n          onChange: (e) => setStatusFilter(e.target.value),\n        },\n        React.createElement(\"option\", { value: \"\" }, \"All\"),\n        React.createElement(\"option\", { value: \"true\" }, \"Completed\"),\n        React.createElement(\"option\", { value: \"false\" }, \"Pending\")\n      )\n    ),\n\n    // Add task inputs\n    React.createElement(\n      \"div\",\n      { style: { marginBottom: 20 } },\n      React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Task title\",\n        value: title,\n        onChange: (e) => setTitle(e.target.value),\n        style: { marginRight: 10 },\n      }),\n      React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: (e) => setDescription(e.target.value),\n        style: { marginRight: 10 },\n      }),\n      React.createElement(\n        \"select\",\n        {\n          value: category,\n          onChange: (e) => setCategory(e.target.value),\n          style: { marginRight: 10 },\n        },\n        React.createElement(\"option\", { value: \"personal\" }, \"Personal\"),\n        React.createElement(\"option\", { value: \"work\" }, \"Work\")\n      ),\n      React.createElement(\n        \"select\",\n        {\n          value: priority,\n          onChange: (e) => setPriority(e.target.value),\n          style: { marginRight: 10 },\n        },\n        React.createElement(\"option\", { value: \"Low\" }, \"Low\"),\n        React.createElement(\"option\", { value: \"Medium\" }, \"Medium\"),\n        React.createElement(\"option\", { value: \"High\" }, \"High\")\n      ),\n      React.createElement(\n        \"button\",\n        { onClick: handleAddTask },\n        \"Add Task\"\n      )\n    ),\n\n    // Tasks list\n    ...tasks.map((task) =>\n      React.createElement(\n        \"div\",\n        {\n          key: task.id,\n          style: {\n            marginBottom: 10,\n            padding: 10,\n            backgroundColor: task.status ? \"#d4edda\" : \"#f8d7da\",\n            borderRadius: 6,\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          },\n        },\n        React.createElement(\n          \"div\",\n          {\n            style: {\n              flex: 1,\n              textDecoration: task.status ? \"line-through\" : \"none\",\n              marginRight: 10,\n            },\n          },\n          `${task.title} [${task.category}] (Priority: ${task.priority})`,\n          React.createElement(\"br\"),\n          React.createElement(\"small\", null, task.description || \"\")\n        ),\n\n        React.createElement(\n          \"button\",\n          {\n            onClick: () => toggleComplete(task),\n            style: { marginRight: 10 },\n          },\n          task.status ? \"Undo\" : \"Complete\"\n        ),\n\n        React.createElement(\n          \"button\",\n          {\n            onClick: () => deleteTask(task.id),\n            style: {\n              backgroundColor: \"#dc3545\",\n              color: \"white\",\n              border: \"none\",\n              padding: \"5px 10px\",\n              cursor: \"pointer\",\n            },\n          },\n          \"Delete\"\n        )\n      )\n    )\n  );\n}\n\nReactDOM.render(React.createElement(App), document.getElementById(\"root\"));\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n*/\n/*import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport App from \"./App\";\n//import Login from \"./Login\";\n//import Dashboard from \"./Dashboard\";\nimport Login from \"./pages/Login\";\nimport Dashboard from \"./pages/DashBoard\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/*\" element={<App />} />  {/* App will have nested routes }\n    </Routes>\n  </BrowserRouter>\n);*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport App from \"./App\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Tasks from \"./pages/Tasks\";\nimport { AuthProvider, useAuth } from \"./utils/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    token\n  } = useAuth();\n  return token ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 29\n  }, this);\n};\n_s(ProtectedRoute, \"ZpOvj47KCDv4EW5BIUHQHDAsr3M=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/tasks\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(Tasks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 340,\n  columnNumber: 3\n}, this));\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","Routes","Route","Navigate","App","Login","Signup","Tasks","AuthProvider","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","token","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","root","createRoot","document","getElementById","render","path","element","$RefreshReg$"],"sources":["E:/STS/frontend/src/index.js"],"sourcesContent":["/*import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nfunction App() {\n  const BACKEND_URL = \"http://127.0.0.1:8000\";\n\n  // State variables\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"personal\");\n  const [priority, setPriority] = useState(\"Low\");\n  const [statusFilter, setStatusFilter] = useState(\"\");\n  const [categoryFilter, setCategoryFilter] = useState(\"\");\n  const [priorityFilter, setPriorityFilter] = useState(\"\");\n  const [summary, setSummary] = useState({\n    total_tasks: 0,\n    completed_tasks: 0,\n    pending_tasks: 0,\n    completion_rate_percent: 0,\n  });\n\n  // Fetch tasks based on filters\n  function fetchTasks() {\n    if (priorityFilter) {\n      // Fetch tasks by priority\n      fetch(`${BACKEND_URL}/tasks-by-priority/?priority=${priorityFilter}`)\n        .then((res) => {\n          if (!res.ok) {\n            if (res.status === 404) return [];\n            throw new Error(\"No tasks found for this priority\");\n          }\n          return res.json();\n        })\n        .then((data) => setTasks(data))\n        .catch(() => setTasks([]));\n    } else {\n      // Fetch filtered tasks by category and status\n      const url = new URL(`${BACKEND_URL}/filter-tasks/`);\n      if (categoryFilter) url.searchParams.append(\"category\", categoryFilter);\n      if (statusFilter !== \"\") url.searchParams.append(\"status\", statusFilter === \"true\");\n      fetch(url.toString())\n        .then((res) => (res.ok ? res.json() : []))\n        .then((data) => setTasks(data))\n        .catch(() => setTasks([]));\n    }\n  }\n\n  // Fetch summary info\n  function fetchSummary() {\n    fetch(BACKEND_URL + \"/tasks-summary/\")\n      .then((res) => res.json())\n      .then((data) => setSummary(data))\n      .catch(() =>\n        setSummary({\n          total_tasks: 0,\n          completed_tasks: 0,\n          pending_tasks: 0,\n          completion_rate_percent: 0,\n        })\n      );\n  }\n\n  // Load tasks and summary on filter changes\n  useEffect(() => {\n    fetchTasks();\n    fetchSummary();\n  }, [priorityFilter, categoryFilter, statusFilter]);\n\n  // Add a new task\n  function handleAddTask() {\n    if (title.trim() === \"\") return;\n\n    const newTask = {\n      title,\n      description,\n      category,\n      priority,\n      status: false,\n    };\n\n    fetch(BACKEND_URL + \"/tasks/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify([newTask]), // backend expects array\n    })\n      .then((res) => {\n        if (!res.ok) throw new Error(\"Failed to create task\");\n        return res.json();\n      })\n      .then(() => {\n        setTitle(\"\");\n        setDescription(\"\");\n        setCategory(\"personal\");\n        setPriority(\"Low\");\n        fetchTasks();\n        fetchSummary();\n      })\n      .catch((err) => alert(\"Error adding task: \" + err.message));\n  }\n\n  // Toggle task completion\n  function toggleComplete(task) {\n    fetch(`${BACKEND_URL}/tasks/${task.id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ ...task, status: !task.status }),\n    })\n      .then(() => {\n        fetchTasks();\n        fetchSummary();\n      })\n      .catch(() => alert(\"Failed to update task\"));\n  }\n\n  // Delete task\n  function deleteTask(taskId) {\n    fetch(`${BACKEND_URL}/tasks/${taskId}`, { method: \"DELETE\" })\n      .then(() => {\n        fetchTasks();\n        fetchSummary();\n      })\n      .catch(() => alert(\"Failed to delete task\"));\n  }\n\n  return React.createElement(\n    \"div\",\n    { style: { maxWidth: 700, margin: \"auto\", fontFamily: \"Arial, sans-serif\", padding: 20 } },\n\n    React.createElement(\"h2\", null, \"Smart Task Tracker\"),\n\n    // Summary\n    React.createElement(\n      \"div\",\n      {\n        style: {\n          marginBottom: 20,\n          padding: 10,\n          backgroundColor: \"#f0f0f0\",\n          borderRadius: 6,\n        },\n      },\n      React.createElement(\"div\", null, `Total Tasks: ${summary.total_tasks}`),\n      React.createElement(\"div\", null, `Completed: ${summary.completed_tasks}`),\n      React.createElement(\"div\", null, `Pending: ${summary.pending_tasks}`),\n      React.createElement(\"div\", null, `Completion Rate: ${summary.completion_rate_percent}%`)\n    ),\n\n    // Filters\n    React.createElement(\n      \"div\",\n      { style: { marginBottom: 20 } },\n\n      React.createElement(\"label\", null, \"Filter Priority: \"),\n      React.createElement(\n        \"select\",\n        {\n          value: priorityFilter,\n          onChange: (e) => setPriorityFilter(e.target.value),\n          style: { marginRight: 20 },\n        },\n        React.createElement(\"option\", { value: \"\" }, \"All\"),\n        React.createElement(\"option\", { value: \"Low\" }, \"Low\"),\n        React.createElement(\"option\", { value: \"Medium\" }, \"Medium\"),\n        React.createElement(\"option\", { value: \"High\" }, \"High\")\n      ),\n\n      React.createElement(\"label\", null, \"Filter Category: \"),\n      React.createElement(\n        \"select\",\n        {\n          value: categoryFilter,\n          onChange: (e) => setCategoryFilter(e.target.value),\n          style: { marginRight: 20 },\n        },\n        React.createElement(\"option\", { value: \"\" }, \"All\"),\n        React.createElement(\"option\", { value: \"personal\" }, \"Personal\"),\n        React.createElement(\"option\", { value: \"work\" }, \"Work\")\n      ),\n\n      React.createElement(\"label\", null, \"Filter Status: \"),\n      React.createElement(\n        \"select\",\n        {\n          value: statusFilter,\n          onChange: (e) => setStatusFilter(e.target.value),\n        },\n        React.createElement(\"option\", { value: \"\" }, \"All\"),\n        React.createElement(\"option\", { value: \"true\" }, \"Completed\"),\n        React.createElement(\"option\", { value: \"false\" }, \"Pending\")\n      )\n    ),\n\n    // Add task inputs\n    React.createElement(\n      \"div\",\n      { style: { marginBottom: 20 } },\n      React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Task title\",\n        value: title,\n        onChange: (e) => setTitle(e.target.value),\n        style: { marginRight: 10 },\n      }),\n      React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: (e) => setDescription(e.target.value),\n        style: { marginRight: 10 },\n      }),\n      React.createElement(\n        \"select\",\n        {\n          value: category,\n          onChange: (e) => setCategory(e.target.value),\n          style: { marginRight: 10 },\n        },\n        React.createElement(\"option\", { value: \"personal\" }, \"Personal\"),\n        React.createElement(\"option\", { value: \"work\" }, \"Work\")\n      ),\n      React.createElement(\n        \"select\",\n        {\n          value: priority,\n          onChange: (e) => setPriority(e.target.value),\n          style: { marginRight: 10 },\n        },\n        React.createElement(\"option\", { value: \"Low\" }, \"Low\"),\n        React.createElement(\"option\", { value: \"Medium\" }, \"Medium\"),\n        React.createElement(\"option\", { value: \"High\" }, \"High\")\n      ),\n      React.createElement(\n        \"button\",\n        { onClick: handleAddTask },\n        \"Add Task\"\n      )\n    ),\n\n    // Tasks list\n    ...tasks.map((task) =>\n      React.createElement(\n        \"div\",\n        {\n          key: task.id,\n          style: {\n            marginBottom: 10,\n            padding: 10,\n            backgroundColor: task.status ? \"#d4edda\" : \"#f8d7da\",\n            borderRadius: 6,\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          },\n        },\n        React.createElement(\n          \"div\",\n          {\n            style: {\n              flex: 1,\n              textDecoration: task.status ? \"line-through\" : \"none\",\n              marginRight: 10,\n            },\n          },\n          `${task.title} [${task.category}] (Priority: ${task.priority})`,\n          React.createElement(\"br\"),\n          React.createElement(\"small\", null, task.description || \"\")\n        ),\n\n        React.createElement(\n          \"button\",\n          {\n            onClick: () => toggleComplete(task),\n            style: { marginRight: 10 },\n          },\n          task.status ? \"Undo\" : \"Complete\"\n        ),\n\n        React.createElement(\n          \"button\",\n          {\n            onClick: () => deleteTask(task.id),\n            style: {\n              backgroundColor: \"#dc3545\",\n              color: \"white\",\n              border: \"none\",\n              padding: \"5px 10px\",\n              cursor: \"pointer\",\n            },\n          },\n          \"Delete\"\n        )\n      )\n    )\n  );\n}\n\nReactDOM.render(React.createElement(App), document.getElementById(\"root\"));\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n*/\n/*import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport App from \"./App\";\n//import Login from \"./Login\";\n//import Dashboard from \"./Dashboard\";\nimport Login from \"./pages/Login\";\nimport Dashboard from \"./pages/DashBoard\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/*\" element={<App />} />  {/* App will have nested routes }\n    </Routes>\n  </BrowserRouter>\n);*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport App from \"./App\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Tasks from \"./pages/Tasks\";\nimport { AuthProvider, useAuth } from \"./utils/AuthContext\";\n\nconst ProtectedRoute = ({ children }) => {\n  const { token } = useAuth();\n  return token ? children : <Navigate to=\"/login\" />;\n};\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <AuthProvider>\n      <Routes>\n        <Route path=\"/\" element={<App />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/signup\" element={<Signup />} />\n        <Route\n          path=\"/tasks\"\n          element={\n            <ProtectedRoute>\n              <Tasks />\n            </ProtectedRoute>\n          }\n        />\n      </Routes>\n    </AuthProvider>\n  </BrowserRouter>\n);\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}