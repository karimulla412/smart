{"ast":null,"code":"var _jsxFileName = \"E:\\\\STS\\\\frontend\\\\src\\\\pages\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useAuth } from \"../utils/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tasks() {\n  _s();\n  const BACKEND_URL = \"http://localhost:8000\";\n  const {\n    token,\n    logout\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"personal\");\n  const [status, setStatus] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchData = useCallback(() => {\n    fetch(BACKEND_URL + \"/tasks/\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      if (res.status === 401) {\n        logout();\n        throw new Error(\"Unauthorized\");\n      }\n      if (!res.ok) throw new Error(\"Failed to fetch tasks\");\n      return res.json();\n    }).then(data => setTasks(data)).catch(err => setError(err.message));\n  }, [token, logout]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const handleAddTask = () => {\n    if (!title.trim()) {\n      alert(\"Title is required\");\n      return;\n    }\n    const newTask = {\n      title,\n      description,\n      category,\n      status,\n      priority: \"Low\" // Optional, change if needed\n    };\n    fetch(`${BACKEND_URL}/tasks/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(newTask) // âœ… Correct format\n    }).then(res => {\n      if (res.status === 401) {\n        logout();\n        throw new Error(\"Unauthorized\");\n      }\n      if (!res.ok) throw new Error(\"Failed to add task\");\n      return res.json();\n    }).then(() => {\n      setTitle(\"\");\n      setDescription(\"\");\n      setCategory(\"personal\");\n      setStatus(false);\n      fetchData();\n    }).catch(err => alert(err.message));\n  };\n  const toggleComplete = task => {\n    fetch(`${BACKEND_URL}/tasks/${task.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        ...task,\n        status: !task.status\n      })\n    }).then(res => {\n      if (res.status === 401) {\n        logout();\n        throw new Error(\"Unauthorized\");\n      }\n      if (!res.ok) throw new Error(\"Failed to update task\");\n      return res.json();\n    }).then(fetchData).catch(err => alert(err.message));\n  };\n  const deleteTask = taskId => {\n    fetch(`${BACKEND_URL}/tasks/${taskId}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      if (res.status === 401) {\n        logout();\n        throw new Error(\"Unauthorized\");\n      }\n      if (!res.ok) throw new Error(\"Failed to delete task\");\n      return res.json();\n    }).then(fetchData).catch(err => alert(err.message));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 700,\n      margin: \"auto\",\n      padding: 20,\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: 24,\n        marginBottom: 20\n      },\n      children: \"Your Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20,\n        padding: 15,\n        backgroundColor: \"#f0f0f0\",\n        borderRadius: 6,\n        boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginBottom: 10\n        },\n        children: \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title *\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        style: {\n          padding: 8,\n          marginBottom: 10,\n          width: \"100%\",\n          boxSizing: \"border-box\"\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        style: {\n          padding: 8,\n          marginBottom: 10,\n          width: \"100%\",\n          boxSizing: \"border-box\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        style: {\n          padding: 8,\n          marginBottom: 10,\n          width: \"100%\",\n          boxSizing: \"border-box\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"personal\",\n          children: \"Personal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"work\",\n          children: \"Work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: \"block\",\n          marginBottom: 15\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: status,\n          onChange: e => setStatus(e.target.checked),\n          style: {\n            marginRight: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), \"Completed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        style: {\n          backgroundColor: \"#007bff\",\n          color: \"white\",\n          border: \"none\",\n          padding: \"10px 15px\",\n          cursor: \"pointer\",\n          borderRadius: 4\n        },\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        marginBottom: 20\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10,\n        padding: 10,\n        backgroundColor: task.status ? \"#d4edda\" : \"#f8d7da\",\n        borderRadius: 6,\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        fontFamily: \"Arial, sans-serif\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          textDecoration: task.status ? \"line-through\" : \"none\",\n          marginRight: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this), \" [\", task.category, \"]\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 62\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleComplete(task),\n        style: {\n          marginRight: 10,\n          padding: \"5px 10px\",\n          cursor: \"pointer\"\n        },\n        children: task.status ? \"Undo\" : \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTask(task.id),\n        style: {\n          backgroundColor: \"#dc3545\",\n          color: \"white\",\n          border: \"none\",\n          padding: \"5px 10px\",\n          cursor: \"pointer\"\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n/*import React, { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../utils/AuthContext\";\r\n//import { useAuth } from \"../utils/AuthContext\";\r\n\r\n\r\nexport default function Tasks() {\r\n  const { token, logout } = useAuth();\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  const [summary, setSummary] = useState({ total_tasks: 0, completed_tasks: 0, percent_completed: 0 });\r\n  const [loading, setLoading] = useState(true);\r\n  const [newTaskTitle, setNewTaskTitle] = useState(\"\");\r\n  const [newTaskCategory, setNewTaskCategory] = useState(\"Low\");\r\n\r\n  const API_BASE = \"http://localhost:8000\"; // your backend URL\r\n\r\n  // Fetch tasks & summary\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const resTasks = await fetch(`${API_BASE}/tasks/`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      if (!resTasks.ok) throw new Error(\"Failed to fetch tasks\");\r\n      const dataTasks = await resTasks.json();\r\n\r\n      const resSummary = await fetch(`${API_BASE}/tasks-summary`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      if (!resSummary.ok) throw new Error(\"Failed to fetch summary\");\r\n      const dataSummary = await resSummary.json();\r\n\r\n      setTasks(dataTasks);\r\n      setSummary(dataSummary);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Toggle task status (complete/incomplete)\r\n  const toggleStatus = async (task) => {\r\n    try {\r\n      const updatedTask = {\r\n        ...task,\r\n        status: !task.status,\r\n      };\r\n      const res = await fetch(`${API_BASE}/tasks/${task.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Authorization\": `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(updatedTask),\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to update task\");\r\n      await fetchData();\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  // Delete task\r\n  const deleteTask = async (taskId) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this task?\")) return;\r\n    try {\r\n      const res = await fetch(`${API_BASE}/tasks/${taskId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to delete task\");\r\n      await fetchData();\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  // Add new task\r\n  const addTask = async () => {\r\n    if (!newTaskTitle.trim()) {\r\n      alert(\"Please enter a task title\");\r\n      return;\r\n    }\r\n    try {\r\n      const newTask = {\r\n        title: newTaskTitle,\r\n        description: \"\",\r\n        category: newTaskCategory,\r\n        status: false,\r\n        priority: newTaskCategory,\r\n      };\r\n      const res = await fetch(`${API_BASE}/tasks/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newTask),\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to add task\");\r\n      setNewTaskTitle(\"\");\r\n      setNewTaskCategory(\"Low\");\r\n      await fetchData();\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div style={{ padding: 20, maxWidth: 700, margin: \"auto\" }}>\r\n      <header style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        <h1>Smart Task Tracker</h1>\r\n        <button onClick={logout} style={{ padding: \"6px 12px\" }}>Logout</button>\r\n      </header>\r\n\r\n      <section style={{ marginTop: 20 }}>\r\n        <h2>Summary</h2>\r\n        <p>Total Tasks: {summary.total_tasks}</p>\r\n        <p>Completed: {summary.completed_tasks}</p>\r\n        <p>Completion Rate: {summary.percent_completed.toFixed(2)}%</p>\r\n      </section>\r\n\r\n      <section style={{ marginTop: 30 }}>\r\n        <h2>Add Task</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task title\"\r\n          value={newTaskTitle}\r\n          onChange={(e) => setNewTaskTitle(e.target.value)}\r\n          style={{ padding: 6, width: \"60%\", marginRight: 10 }}\r\n        />\r\n        <select\r\n          value={newTaskCategory}\r\n          onChange={(e) => setNewTaskCategory(e.target.value)}\r\n          style={{ padding: 6, marginRight: 10 }}\r\n        >\r\n          <option>Low</option>\r\n          <option>Medium</option>\r\n          <option>High</option>\r\n        </select>\r\n        <button onClick={addTask} style={{ padding: \"6px 12px\" }}>Add Task</button>\r\n      </section>\r\n\r\n      <section style={{ marginTop: 40 }}>\r\n        <h2>All Tasks</h2>\r\n        {tasks.length === 0 && <p>No tasks found.</p>}\r\n        {tasks.map((task) => (\r\n          <div\r\n            key={task.id}\r\n            style={{\r\n              border: \"1px solid #ddd\",\r\n              padding: 12,\r\n              marginBottom: 10,\r\n              borderRadius: 4,\r\n              backgroundColor: task.status ? \"#d4edda\" : \"#f8d7da\",\r\n            }}\r\n          >\r\n            <h3>{task.title}</h3>\r\n            <p><strong>Category:</strong> {task.category}</p>\r\n            <p><strong>Status:</strong> {task.status ? \"Done\" : \"Pending\"}</p>\r\n\r\n            <button\r\n              onClick={() => toggleStatus(task)}\r\n              style={{ marginRight: 10, padding: \"4px 10px\" }}\r\n            >\r\n              {task.status ? \"Mark Incomplete\" : \"Mark Complete\"}\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => deleteTask(task.id)}\r\n              style={{ padding: \"4px 10px\", backgroundColor: \"#dc3545\", color: \"#fff\", border: \"none\" }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </section>\r\n    </div>\r\n  );\r\n}*/\n\n/*import React, { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../utils/AuthContext\";\r\n\r\nexport default function Tasks() {\r\n  const { token, logout } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [summary, setSummary] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    priority: \"Low\",\r\n    status: false,\r\n  });\r\n\r\n  const fetchTasks = () => {\r\n    fetch(\"http://localhost:8000/tasks/\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(setTasks);\r\n  };\r\n\r\n  const fetchSummary = () => {\r\n    fetch(\"http://localhost:8000/tasks-summary\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(setSummary);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    fetchSummary();\r\n  }, [token]);\r\n\r\n  const handleCreate = async (e) => {\r\n    e.preventDefault();\r\n    const res = await fetch(\"http://localhost:8000/tasks/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(formData),\r\n    });\r\n    if (res.ok) {\r\n      setFormData({ title: \"\", description: \"\", category: \"\", priority: \"Low\", status: false });\r\n      fetchTasks();\r\n      fetchSummary();\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await fetch(`http://localhost:8000/tasks/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    fetchTasks();\r\n    fetchSummary();\r\n  };\r\n\r\n  const handleToggleStatus = async (task) => {\r\n    await fetch(`http://localhost:8000/tasks/${task.id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({ ...task, status: !task.status }),\r\n    });\r\n    fetchTasks();\r\n    fetchSummary();\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h2 className=\"text-xl font-bold\">Your Tasks</h2>\r\n        <button onClick={logout} className=\"bg-red-500 text-white px-4 py-2\">Logout</button>\r\n      </div>\r\n\r\n      {summary && (\r\n        <div className=\"my-4\">\r\n          <p><strong>Summary:</strong></p>\r\n          <p>Total: {summary.total_tasks}, Completed: {summary.completed_tasks}, Completion Rate: {summary.percent_completed}%</p>\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleCreate} className=\"my-4 space-y-2\">\r\n        <input value={formData.title} onChange={(e) => setFormData({ ...formData, title: e.target.value })} placeholder=\"Title\" className=\"block border p-2 w-full\" required />\r\n        <input value={formData.description} onChange={(e) => setFormData({ ...formData, description: e.target.value })} placeholder=\"Description\" className=\"block border p-2 w-full\" />\r\n        <input value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })} placeholder=\"Category\" className=\"block border p-2 w-full\" />\r\n        <select value={formData.priority} onChange={(e) => setFormData({ ...formData, priority: e.target.value })} className=\"block border p-2 w-full\">\r\n          <option value=\"Low\">Low</option>\r\n          <option value=\"Medium\">Medium</option>\r\n          <option value=\"High\">High</option>\r\n        </select>\r\n        <button type=\"submit\" className=\"bg-green-500 text-white px-4 py-2\">Add Task</button>\r\n      </form>\r\n\r\n      <h3 className=\"font-semibold mt-4\">All Tasks</h3>\r\n      <ul className=\"mb-4\">\r\n        {tasks.map((task) => (\r\n          <li key={task.id} className=\"border-b py-2\">\r\n            <strong>{task.title}</strong> - {task.category} - {task.priority} - {task.status ? \"Done\" : \"Pending\"}\r\n            <div className=\"flex space-x-2 mt-1\">\r\n              <button onClick={() => handleToggleStatus(task)} className=\"text-sm text-blue-600\">Toggle</button>\r\n              <button onClick={() => handleDelete(task.id)} className=\"text-sm text-red-600\">Delete</button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n*/\n_s(Tasks, \"+YZYeWI3TW98GeyDn/TyuotMwU4=\", false, function () {\n  return [useAuth];\n});\n_c = Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useAuth","jsxDEV","_jsxDEV","Tasks","_s","BACKEND_URL","token","logout","tasks","setTasks","title","setTitle","description","setDescription","category","setCategory","status","setStatus","error","setError","fetchData","fetch","headers","Authorization","then","res","Error","ok","json","data","catch","err","message","handleAddTask","trim","alert","newTask","priority","method","body","JSON","stringify","toggleComplete","task","id","deleteTask","taskId","style","maxWidth","margin","padding","fontFamily","children","fontSize","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","borderRadius","boxShadow","type","placeholder","value","onChange","e","target","width","boxSizing","required","display","checked","marginRight","onClick","color","border","cursor","length","map","justifyContent","alignItems","flex","textDecoration","_c","$RefreshReg$"],"sources":["E:/STS/frontend/src/pages/Tasks.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useAuth } from \"../utils/AuthContext\";\r\n\r\nexport default function Tasks() {\r\n  const BACKEND_URL = \"http://localhost:8000\";\r\n  const { token, logout } = useAuth();\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"personal\");\r\n  const [status, setStatus] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = useCallback(() => {\r\n    fetch(BACKEND_URL + \"/tasks/\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 401) {\r\n          logout();\r\n          throw new Error(\"Unauthorized\");\r\n        }\r\n        if (!res.ok) throw new Error(\"Failed to fetch tasks\");\r\n        return res.json();\r\n      })\r\n      .then((data) => setTasks(data))\r\n      .catch((err) => setError(err.message));\r\n  }, [token, logout]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const handleAddTask = () => {\r\n    if (!title.trim()) {\r\n      alert(\"Title is required\");\r\n      return;\r\n    }\r\n    const newTask = {\r\n      title,\r\n      description,\r\n      category,\r\n      status,\r\n      priority: \"Low\", // Optional, change if needed\r\n    };\r\n\r\n    fetch(`${BACKEND_URL}/tasks/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(newTask), // âœ… Correct format\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 401) {\r\n          logout();\r\n          throw new Error(\"Unauthorized\");\r\n        }\r\n        if (!res.ok) throw new Error(\"Failed to add task\");\r\n        return res.json();\r\n      })\r\n      .then(() => {\r\n        setTitle(\"\");\r\n        setDescription(\"\");\r\n        setCategory(\"personal\");\r\n        setStatus(false);\r\n        fetchData();\r\n      })\r\n      .catch((err) => alert(err.message));\r\n  };\r\n\r\n\r\n  const toggleComplete = (task) => {\r\n    fetch(`${BACKEND_URL}/tasks/${task.id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({ ...task, status: !task.status }),\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 401) {\r\n          logout();\r\n          throw new Error(\"Unauthorized\");\r\n        }\r\n        if (!res.ok) throw new Error(\"Failed to update task\");\r\n        return res.json();\r\n      })\r\n      .then(fetchData)\r\n      .catch((err) => alert(err.message));\r\n  };\r\n\r\n  const deleteTask = (taskId) => {\r\n    fetch(`${BACKEND_URL}/tasks/${taskId}`, {\r\n      method: \"DELETE\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 401) {\r\n          logout();\r\n          throw new Error(\"Unauthorized\");\r\n        }\r\n        if (!res.ok) throw new Error(\"Failed to delete task\");\r\n        return res.json();\r\n      })\r\n      .then(fetchData)\r\n      .catch((err) => alert(err.message));\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 700, margin: \"auto\", padding: 20, fontFamily: \"Arial, sans-serif\" }}>\r\n      <h2 style={{ fontSize: 24, marginBottom: 20 }}>Your Tasks</h2>\r\n\r\n      {/* Add Task Form */}\r\n      <div\r\n        style={{\r\n          marginBottom: 20,\r\n          padding: 15,\r\n          backgroundColor: \"#f0f0f0\",\r\n          borderRadius: 6,\r\n          boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\",\r\n        }}\r\n      >\r\n        <h3 style={{ marginBottom: 10 }}>Add New Task</h3>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title *\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          style={{ padding: 8, marginBottom: 10, width: \"100%\", boxSizing: \"border-box\" }}\r\n          required\r\n        />\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          style={{ padding: 8, marginBottom: 10, width: \"100%\", boxSizing: \"border-box\" }}\r\n        />\r\n\r\n        <select\r\n          value={category}\r\n          onChange={(e) => setCategory(e.target.value)}\r\n          style={{ padding: 8, marginBottom: 10, width: \"100%\", boxSizing: \"border-box\" }}\r\n        >\r\n          <option value=\"personal\">Personal</option>\r\n          <option value=\"work\">Work</option>\r\n        </select>\r\n\r\n        <label style={{ display: \"block\", marginBottom: 15 }}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={status}\r\n            onChange={(e) => setStatus(e.target.checked)}\r\n            style={{ marginRight: 8 }}\r\n          />\r\n          Completed\r\n        </label>\r\n\r\n        <button\r\n          onClick={handleAddTask}\r\n          style={{\r\n            backgroundColor: \"#007bff\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            padding: \"10px 15px\",\r\n            cursor: \"pointer\",\r\n            borderRadius: 4,\r\n          }}\r\n        >\r\n          Add Task\r\n        </button>\r\n      </div>\r\n\r\n      {/* Error message */}\r\n      {error && <p style={{ color: \"red\", marginBottom: 20 }}>{error}</p>}\r\n\r\n      {/* Tasks List */}\r\n      {tasks.length === 0 ? (\r\n        <p>No tasks found.</p>\r\n      ) : (\r\n        tasks.map((task) => (\r\n          <div\r\n            key={task.id}\r\n            style={{\r\n              marginBottom: 10,\r\n              padding: 10,\r\n              backgroundColor: task.status ? \"#d4edda\" : \"#f8d7da\",\r\n              borderRadius: 6,\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              fontFamily: \"Arial, sans-serif\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                flex: 1,\r\n                textDecoration: task.status ? \"line-through\" : \"none\",\r\n                marginRight: 10,\r\n              }}\r\n            >\r\n              <strong>{task.title}</strong> [{task.category}]<br />\r\n              <small>{task.description}</small>\r\n            </div>\r\n\r\n            <button\r\n              onClick={() => toggleComplete(task)}\r\n              style={{ marginRight: 10, padding: \"5px 10px\", cursor: \"pointer\" }}\r\n            >\r\n              {task.status ? \"Undo\" : \"Complete\"}\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => deleteTask(task.id)}\r\n              style={{\r\n                backgroundColor: \"#dc3545\",\r\n                color: \"white\",\r\n                border: \"none\",\r\n                padding: \"5px 10px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n/*import React, { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../utils/AuthContext\";\r\n//import { useAuth } from \"../utils/AuthContext\";\r\n\r\n\r\nexport default function Tasks() {\r\n  const { token, logout } = useAuth();\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  const [summary, setSummary] = useState({ total_tasks: 0, completed_tasks: 0, percent_completed: 0 });\r\n  const [loading, setLoading] = useState(true);\r\n  const [newTaskTitle, setNewTaskTitle] = useState(\"\");\r\n  const [newTaskCategory, setNewTaskCategory] = useState(\"Low\");\r\n\r\n  const API_BASE = \"http://localhost:8000\"; // your backend URL\r\n\r\n  // Fetch tasks & summary\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const resTasks = await fetch(`${API_BASE}/tasks/`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      if (!resTasks.ok) throw new Error(\"Failed to fetch tasks\");\r\n      const dataTasks = await resTasks.json();\r\n\r\n      const resSummary = await fetch(`${API_BASE}/tasks-summary`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      if (!resSummary.ok) throw new Error(\"Failed to fetch summary\");\r\n      const dataSummary = await resSummary.json();\r\n\r\n      setTasks(dataTasks);\r\n      setSummary(dataSummary);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Toggle task status (complete/incomplete)\r\n  const toggleStatus = async (task) => {\r\n    try {\r\n      const updatedTask = {\r\n        ...task,\r\n        status: !task.status,\r\n      };\r\n      const res = await fetch(`${API_BASE}/tasks/${task.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Authorization\": `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(updatedTask),\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to update task\");\r\n      await fetchData();\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  // Delete task\r\n  const deleteTask = async (taskId) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this task?\")) return;\r\n    try {\r\n      const res = await fetch(`${API_BASE}/tasks/${taskId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to delete task\");\r\n      await fetchData();\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  // Add new task\r\n  const addTask = async () => {\r\n    if (!newTaskTitle.trim()) {\r\n      alert(\"Please enter a task title\");\r\n      return;\r\n    }\r\n    try {\r\n      const newTask = {\r\n        title: newTaskTitle,\r\n        description: \"\",\r\n        category: newTaskCategory,\r\n        status: false,\r\n        priority: newTaskCategory,\r\n      };\r\n      const res = await fetch(`${API_BASE}/tasks/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newTask),\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to add task\");\r\n      setNewTaskTitle(\"\");\r\n      setNewTaskCategory(\"Low\");\r\n      await fetchData();\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div style={{ padding: 20, maxWidth: 700, margin: \"auto\" }}>\r\n      <header style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        <h1>Smart Task Tracker</h1>\r\n        <button onClick={logout} style={{ padding: \"6px 12px\" }}>Logout</button>\r\n      </header>\r\n\r\n      <section style={{ marginTop: 20 }}>\r\n        <h2>Summary</h2>\r\n        <p>Total Tasks: {summary.total_tasks}</p>\r\n        <p>Completed: {summary.completed_tasks}</p>\r\n        <p>Completion Rate: {summary.percent_completed.toFixed(2)}%</p>\r\n      </section>\r\n\r\n      <section style={{ marginTop: 30 }}>\r\n        <h2>Add Task</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task title\"\r\n          value={newTaskTitle}\r\n          onChange={(e) => setNewTaskTitle(e.target.value)}\r\n          style={{ padding: 6, width: \"60%\", marginRight: 10 }}\r\n        />\r\n        <select\r\n          value={newTaskCategory}\r\n          onChange={(e) => setNewTaskCategory(e.target.value)}\r\n          style={{ padding: 6, marginRight: 10 }}\r\n        >\r\n          <option>Low</option>\r\n          <option>Medium</option>\r\n          <option>High</option>\r\n        </select>\r\n        <button onClick={addTask} style={{ padding: \"6px 12px\" }}>Add Task</button>\r\n      </section>\r\n\r\n      <section style={{ marginTop: 40 }}>\r\n        <h2>All Tasks</h2>\r\n        {tasks.length === 0 && <p>No tasks found.</p>}\r\n        {tasks.map((task) => (\r\n          <div\r\n            key={task.id}\r\n            style={{\r\n              border: \"1px solid #ddd\",\r\n              padding: 12,\r\n              marginBottom: 10,\r\n              borderRadius: 4,\r\n              backgroundColor: task.status ? \"#d4edda\" : \"#f8d7da\",\r\n            }}\r\n          >\r\n            <h3>{task.title}</h3>\r\n            <p><strong>Category:</strong> {task.category}</p>\r\n            <p><strong>Status:</strong> {task.status ? \"Done\" : \"Pending\"}</p>\r\n\r\n            <button\r\n              onClick={() => toggleStatus(task)}\r\n              style={{ marginRight: 10, padding: \"4px 10px\" }}\r\n            >\r\n              {task.status ? \"Mark Incomplete\" : \"Mark Complete\"}\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => deleteTask(task.id)}\r\n              style={{ padding: \"4px 10px\", backgroundColor: \"#dc3545\", color: \"#fff\", border: \"none\" }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </section>\r\n    </div>\r\n  );\r\n}*/\r\n\r\n/*import React, { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../utils/AuthContext\";\r\n\r\nexport default function Tasks() {\r\n  const { token, logout } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [summary, setSummary] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    priority: \"Low\",\r\n    status: false,\r\n  });\r\n\r\n  const fetchTasks = () => {\r\n    fetch(\"http://localhost:8000/tasks/\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(setTasks);\r\n  };\r\n\r\n  const fetchSummary = () => {\r\n    fetch(\"http://localhost:8000/tasks-summary\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(setSummary);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    fetchSummary();\r\n  }, [token]);\r\n\r\n  const handleCreate = async (e) => {\r\n    e.preventDefault();\r\n    const res = await fetch(\"http://localhost:8000/tasks/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(formData),\r\n    });\r\n    if (res.ok) {\r\n      setFormData({ title: \"\", description: \"\", category: \"\", priority: \"Low\", status: false });\r\n      fetchTasks();\r\n      fetchSummary();\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await fetch(`http://localhost:8000/tasks/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    fetchTasks();\r\n    fetchSummary();\r\n  };\r\n\r\n  const handleToggleStatus = async (task) => {\r\n    await fetch(`http://localhost:8000/tasks/${task.id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({ ...task, status: !task.status }),\r\n    });\r\n    fetchTasks();\r\n    fetchSummary();\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h2 className=\"text-xl font-bold\">Your Tasks</h2>\r\n        <button onClick={logout} className=\"bg-red-500 text-white px-4 py-2\">Logout</button>\r\n      </div>\r\n\r\n      {summary && (\r\n        <div className=\"my-4\">\r\n          <p><strong>Summary:</strong></p>\r\n          <p>Total: {summary.total_tasks}, Completed: {summary.completed_tasks}, Completion Rate: {summary.percent_completed}%</p>\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleCreate} className=\"my-4 space-y-2\">\r\n        <input value={formData.title} onChange={(e) => setFormData({ ...formData, title: e.target.value })} placeholder=\"Title\" className=\"block border p-2 w-full\" required />\r\n        <input value={formData.description} onChange={(e) => setFormData({ ...formData, description: e.target.value })} placeholder=\"Description\" className=\"block border p-2 w-full\" />\r\n        <input value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })} placeholder=\"Category\" className=\"block border p-2 w-full\" />\r\n        <select value={formData.priority} onChange={(e) => setFormData({ ...formData, priority: e.target.value })} className=\"block border p-2 w-full\">\r\n          <option value=\"Low\">Low</option>\r\n          <option value=\"Medium\">Medium</option>\r\n          <option value=\"High\">High</option>\r\n        </select>\r\n        <button type=\"submit\" className=\"bg-green-500 text-white px-4 py-2\">Add Task</button>\r\n      </form>\r\n\r\n      <h3 className=\"font-semibold mt-4\">All Tasks</h3>\r\n      <ul className=\"mb-4\">\r\n        {tasks.map((task) => (\r\n          <li key={task.id} className=\"border-b py-2\">\r\n            <strong>{task.title}</strong> - {task.category} - {task.priority} - {task.status ? \"Done\" : \"Pending\"}\r\n            <div className=\"flex space-x-2 mt-1\">\r\n              <button onClick={() => handleToggleStatus(task)} className=\"text-sm text-blue-600\">Toggle</button>\r\n              <button onClick={() => handleDelete(task.id)} className=\"text-sm text-red-600\">Delete</button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n*/"],"mappings":"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AAE2B,MAAM,EAAE;QAAU,CAAE;QAAAzB,QAAA,EAElET,IAAI,CAAC3B,MAAM,GAAG,MAAM,GAAG;MAAU;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eAETxD,OAAA;QACEwE,OAAO,EAAEA,CAAA,KAAM7B,UAAU,CAACF,IAAI,CAACC,EAAE,CAAE;QACnCG,KAAK,EAAE;UACLY,eAAe,EAAE,SAAS;UAC1BgB,KAAK,EAAE,OAAO;UACdC,MAAM,EAAE,MAAM;UACd1B,OAAO,EAAE,UAAU;UACnB2B,MAAM,EAAE;QACV,CAAE;QAAAzB,QAAA,EACH;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAzCJf,IAAI,CAACC,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA0CT,CACN,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApHAtD,EAAA,CAxawBD,KAAK;EAAA,QAEDH,OAAO;AAAA;AAAAoF,EAAA,GAFXjF,KAAK;AAAA,IAAAiF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}