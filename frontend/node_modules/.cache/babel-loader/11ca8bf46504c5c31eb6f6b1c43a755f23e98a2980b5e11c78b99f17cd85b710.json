{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nfunction App() {\n  _s();\n  const [tasks, setTasks] = React.useState([]);\n  const [newTask, setNewTask] = React.useState('');\n  function handleAddTask() {\n    if (newTask.trim() === '') return;\n    setTasks([...tasks, {\n      id: Date.now(),\n      title: newTask,\n      completed: false\n    }]);\n    setNewTask('');\n  }\n  function handleToggleComplete(id) {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  }\n  return /*#__PURE__*/React.createElement('div', {\n    style: {\n      padding: '20px',\n      fontFamily: 'sans-serif'\n    }\n  },\n  /*#__PURE__*/\n  // Heading\n  React.createElement('h1', null, 'Smart Task Tracker'),\n  /*#__PURE__*/\n  // Input box\n  React.createElement('input', {\n    type: 'text',\n    value: newTask,\n    placeholder: 'Enter task',\n    onChange: e => setNewTask(e.target.value),\n    style: {\n      marginRight: '10px'\n    }\n  }),\n  /*#__PURE__*/\n  // Add Button\n  React.createElement('button', {\n    onClick: handleAddTask\n  }, 'Add Task'),\n  // Task List\n  ...tasks.map(task => /*#__PURE__*/React.createElement('div', {\n    key: task.id,\n    style: {\n      marginTop: '10px',\n      textDecoration: task.completed ? 'line-through' : 'none'\n    }\n  }, /*#__PURE__*/React.createElement('span', null, task.title + ' '), /*#__PURE__*/React.createElement('button', {\n    onClick: () => handleToggleComplete(task.id)\n  }, task.completed ? 'Undo' : 'Complete'))));\n}\n_s(App, \"MMRu7H+sKP7rEuK8M8zT6HaT89w=\");\n_c = App;\nReactDOM.render(/*#__PURE__*/React.createElement(App), document.getElementById('root'));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","App","_s","tasks","setTasks","useState","newTask","setNewTask","handleAddTask","trim","id","Date","now","title","completed","handleToggleComplete","map","task","createElement","style","padding","fontFamily","type","value","placeholder","onChange","e","target","marginRight","onClick","key","marginTop","textDecoration","_c","render","document","getElementById","$RefreshReg$"],"sources":["E:/STS/frontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction App() {\n  const [tasks, setTasks] = React.useState([]);\n  const [newTask, setNewTask] = React.useState('');\n\n  function handleAddTask() {\n    if (newTask.trim() === '') return;\n    setTasks([\n      ...tasks,\n      { id: Date.now(), title: newTask, completed: false }\n    ]);\n    setNewTask('');\n  }\n\n  function handleToggleComplete(id) {\n    setTasks(tasks.map(task =>\n      task.id === id ? { ...task, completed: !task.completed } : task\n    ));\n  }\n\n  return React.createElement(\n    'div',\n    { style: { padding: '20px', fontFamily: 'sans-serif' } },\n\n    // Heading\n    React.createElement('h1', null, 'Smart Task Tracker'),\n\n    // Input box\n    React.createElement('input', {\n      type: 'text',\n      value: newTask,\n      placeholder: 'Enter task',\n      onChange: e => setNewTask(e.target.value),\n      style: { marginRight: '10px' }\n    }),\n\n    // Add Button\n    React.createElement('button', { onClick: handleAddTask }, 'Add Task'),\n\n    // Task List\n    ...tasks.map(task =>\n      React.createElement(\n        'div',\n        {\n          key: task.id,\n          style: {\n            marginTop: '10px',\n            textDecoration: task.completed ? 'line-through' : 'none'\n          }\n        },\n        React.createElement('span', null, task.title + ' '),\n        React.createElement(\n          'button',\n          { onClick: () => handleToggleComplete(task.id) },\n          task.completed ? 'Undo' : 'Complete'\n        )\n      )\n    )\n  );\n}\n\nReactDOM.render(\n  React.createElement(App),\n  document.getElementById('root')\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAEhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,KAAK,CAACM,QAAQ,CAAC,EAAE,CAAC;EAEhD,SAASG,aAAaA,CAAA,EAAG;IACvB,IAAIF,OAAO,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC3BL,QAAQ,CAAC,CACP,GAAGD,KAAK,EACR;MAAEO,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEC,KAAK,EAAEP,OAAO;MAAEQ,SAAS,EAAE;IAAM,CAAC,CACrD,CAAC;IACFP,UAAU,CAAC,EAAE,CAAC;EAChB;EAEA,SAASQ,oBAAoBA,CAACL,EAAE,EAAE;IAChCN,QAAQ,CAACD,KAAK,CAACa,GAAG,CAACC,IAAI,IACrBA,IAAI,CAACP,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGO,IAAI;MAAEH,SAAS,EAAE,CAACG,IAAI,CAACH;IAAU,CAAC,GAAGG,IAC7D,CAAC,CAAC;EACJ;EAEA,oBAAOlB,KAAK,CAACmB,aAAa,CACxB,KAAK,EACL;IAAEC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAa;EAAE,CAAC;EAAA;EAExD;EACAtB,KAAK,CAACmB,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,oBAAoB,CAAC;EAAA;EAErD;EACAnB,KAAK,CAACmB,aAAa,CAAC,OAAO,EAAE;IAC3BI,IAAI,EAAE,MAAM;IACZC,KAAK,EAAEjB,OAAO;IACdkB,WAAW,EAAE,YAAY;IACzBC,QAAQ,EAAEC,CAAC,IAAInB,UAAU,CAACmB,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAC;IACzCJ,KAAK,EAAE;MAAES,WAAW,EAAE;IAAO;EAC/B,CAAC,CAAC;EAAA;EAEF;EACA7B,KAAK,CAACmB,aAAa,CAAC,QAAQ,EAAE;IAAEW,OAAO,EAAErB;EAAc,CAAC,EAAE,UAAU,CAAC;EAErE;EACA,GAAGL,KAAK,CAACa,GAAG,CAACC,IAAI,iBACflB,KAAK,CAACmB,aAAa,CACjB,KAAK,EACL;IACEY,GAAG,EAAEb,IAAI,CAACP,EAAE;IACZS,KAAK,EAAE;MACLY,SAAS,EAAE,MAAM;MACjBC,cAAc,EAAEf,IAAI,CAACH,SAAS,GAAG,cAAc,GAAG;IACpD;EACF,CAAC,eACDf,KAAK,CAACmB,aAAa,CAAC,MAAM,EAAE,IAAI,EAAED,IAAI,CAACJ,KAAK,GAAG,GAAG,CAAC,eACnDd,KAAK,CAACmB,aAAa,CACjB,QAAQ,EACR;IAAEW,OAAO,EAAEA,CAAA,KAAMd,oBAAoB,CAACE,IAAI,CAACP,EAAE;EAAE,CAAC,EAChDO,IAAI,CAACH,SAAS,GAAG,MAAM,GAAG,UAC5B,CACF,CACF,CACF,CAAC;AACH;AAACZ,EAAA,CA1DQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AA4DZD,QAAQ,CAACkC,MAAM,cACbnC,KAAK,CAACmB,aAAa,CAACjB,GAAG,CAAC,EACxBkC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;AAAC,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}