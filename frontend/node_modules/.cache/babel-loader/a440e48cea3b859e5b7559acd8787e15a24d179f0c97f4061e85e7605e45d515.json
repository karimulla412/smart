{"ast":null,"code":"var _jsxFileName = \"E:\\\\STS\\\\frontend\\\\src\\\\pages\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useAuth } from \"../utils/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tasks() {\n  _s();\n  const BACKEND_URL = \"http://localhost:8000\";\n  const {\n    token,\n    logout\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"personal\");\n  const [status, setStatus] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchData = useCallback(() => {\n    fetch(BACKEND_URL + \"/tasks/\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      if (res.status === 401) {\n        logout();\n        throw new Error(\"Unauthorized\");\n      }\n      if (!res.ok) throw new Error(\"Failed to fetch tasks\");\n      return res.json();\n    }).then(data => setTasks(data)).catch(err => setError(err.message));\n  }, [token, logout]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const handleAddTask = () => {\n    if (!title.trim()) {\n      alert(\"Title is required\");\n      return;\n    }\n    const newTask = {\n      title,\n      description,\n      category,\n      status\n    };\n    fetch(BACKEND_URL + \"/tasks/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify([newTask]) // backend expects an array\n    }).then(res => {\n      if (res.status === 401) {\n        logout();\n        throw new Error(\"Unauthorized\");\n      }\n      if (!res.ok) throw new Error(\"Failed to add task\");\n      return res.json();\n    }).then(() => {\n      setTitle(\"\");\n      setDescription(\"\");\n      setCategory(\"personal\");\n      setStatus(false);\n      fetchData();\n    }).catch(err => alert(err.message));\n  };\n  const toggleComplete = task => {\n    fetch(`${BACKEND_URL}/tasks/${task.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        ...task,\n        status: !task.status\n      })\n    }).then(res => {\n      if (res.status === 401) {\n        logout();\n        throw new Error(\"Unauthorized\");\n      }\n      if (!res.ok) throw new Error(\"Failed to update task\");\n      return res.json();\n    }).then(fetchData).catch(err => alert(err.message));\n  };\n  const deleteTask = taskId => {\n    fetch(`${BACKEND_URL}/tasks/${taskId}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      if (res.status === 401) {\n        logout();\n        throw new Error(\"Unauthorized\");\n      }\n      if (!res.ok) throw new Error(\"Failed to delete task\");\n      return res.json();\n    }).then(fetchData).catch(err => alert(err.message));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Your Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 border rounded shadow-sm bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl mb-2 font-semibold\",\n        children: \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"border p-2 mb-2 w-full\",\n        type: \"text\",\n        placeholder: \"Title *\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"border p-2 mb-2 w-full\",\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"border p-2 mb-2 w-full\",\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"personal\",\n          children: \"Personal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"work\",\n          children: \"Work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"inline-flex items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: status,\n          onChange: e => setStatus(e.target.checked),\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), \"Completed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-600 mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex justify-between items-center mb-3 p-3 rounded ${task.status ? \"bg-green-100\" : \"bg-red-100\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: `font-semibold ${task.status ? \"line-through\" : \"\"}`,\n          children: [task.title, \" [\", task.category, \"]\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleComplete(task),\n          className: \"mr-2 px-3 py-1 border rounded hover:bg-gray-200\",\n          children: task.status ? \"Undo\" : \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.id),\n          className: \"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n/*import React, { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../utils/AuthContext\";\r\n//import { useAuth } from \"../utils/AuthContext\";\r\n\r\n\r\nexport default function Tasks() {\r\n  const { token, logout } = useAuth();\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  const [summary, setSummary] = useState({ total_tasks: 0, completed_tasks: 0, percent_completed: 0 });\r\n  const [loading, setLoading] = useState(true);\r\n  const [newTaskTitle, setNewTaskTitle] = useState(\"\");\r\n  const [newTaskCategory, setNewTaskCategory] = useState(\"Low\");\r\n\r\n  const API_BASE = \"http://localhost:8000\"; // your backend URL\r\n\r\n  // Fetch tasks & summary\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const resTasks = await fetch(`${API_BASE}/tasks/`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      if (!resTasks.ok) throw new Error(\"Failed to fetch tasks\");\r\n      const dataTasks = await resTasks.json();\r\n\r\n      const resSummary = await fetch(`${API_BASE}/tasks-summary`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      if (!resSummary.ok) throw new Error(\"Failed to fetch summary\");\r\n      const dataSummary = await resSummary.json();\r\n\r\n      setTasks(dataTasks);\r\n      setSummary(dataSummary);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Toggle task status (complete/incomplete)\r\n  const toggleStatus = async (task) => {\r\n    try {\r\n      const updatedTask = {\r\n        ...task,\r\n        status: !task.status,\r\n      };\r\n      const res = await fetch(`${API_BASE}/tasks/${task.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Authorization\": `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(updatedTask),\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to update task\");\r\n      await fetchData();\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  // Delete task\r\n  const deleteTask = async (taskId) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this task?\")) return;\r\n    try {\r\n      const res = await fetch(`${API_BASE}/tasks/${taskId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to delete task\");\r\n      await fetchData();\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  // Add new task\r\n  const addTask = async () => {\r\n    if (!newTaskTitle.trim()) {\r\n      alert(\"Please enter a task title\");\r\n      return;\r\n    }\r\n    try {\r\n      const newTask = {\r\n        title: newTaskTitle,\r\n        description: \"\",\r\n        category: newTaskCategory,\r\n        status: false,\r\n        priority: newTaskCategory,\r\n      };\r\n      const res = await fetch(`${API_BASE}/tasks/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newTask),\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to add task\");\r\n      setNewTaskTitle(\"\");\r\n      setNewTaskCategory(\"Low\");\r\n      await fetchData();\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div style={{ padding: 20, maxWidth: 700, margin: \"auto\" }}>\r\n      <header style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        <h1>Smart Task Tracker</h1>\r\n        <button onClick={logout} style={{ padding: \"6px 12px\" }}>Logout</button>\r\n      </header>\r\n\r\n      <section style={{ marginTop: 20 }}>\r\n        <h2>Summary</h2>\r\n        <p>Total Tasks: {summary.total_tasks}</p>\r\n        <p>Completed: {summary.completed_tasks}</p>\r\n        <p>Completion Rate: {summary.percent_completed.toFixed(2)}%</p>\r\n      </section>\r\n\r\n      <section style={{ marginTop: 30 }}>\r\n        <h2>Add Task</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task title\"\r\n          value={newTaskTitle}\r\n          onChange={(e) => setNewTaskTitle(e.target.value)}\r\n          style={{ padding: 6, width: \"60%\", marginRight: 10 }}\r\n        />\r\n        <select\r\n          value={newTaskCategory}\r\n          onChange={(e) => setNewTaskCategory(e.target.value)}\r\n          style={{ padding: 6, marginRight: 10 }}\r\n        >\r\n          <option>Low</option>\r\n          <option>Medium</option>\r\n          <option>High</option>\r\n        </select>\r\n        <button onClick={addTask} style={{ padding: \"6px 12px\" }}>Add Task</button>\r\n      </section>\r\n\r\n      <section style={{ marginTop: 40 }}>\r\n        <h2>All Tasks</h2>\r\n        {tasks.length === 0 && <p>No tasks found.</p>}\r\n        {tasks.map((task) => (\r\n          <div\r\n            key={task.id}\r\n            style={{\r\n              border: \"1px solid #ddd\",\r\n              padding: 12,\r\n              marginBottom: 10,\r\n              borderRadius: 4,\r\n              backgroundColor: task.status ? \"#d4edda\" : \"#f8d7da\",\r\n            }}\r\n          >\r\n            <h3>{task.title}</h3>\r\n            <p><strong>Category:</strong> {task.category}</p>\r\n            <p><strong>Status:</strong> {task.status ? \"Done\" : \"Pending\"}</p>\r\n\r\n            <button\r\n              onClick={() => toggleStatus(task)}\r\n              style={{ marginRight: 10, padding: \"4px 10px\" }}\r\n            >\r\n              {task.status ? \"Mark Incomplete\" : \"Mark Complete\"}\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => deleteTask(task.id)}\r\n              style={{ padding: \"4px 10px\", backgroundColor: \"#dc3545\", color: \"#fff\", border: \"none\" }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </section>\r\n    </div>\r\n  );\r\n}*/\n\n/*import React, { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../utils/AuthContext\";\r\n\r\nexport default function Tasks() {\r\n  const { token, logout } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [summary, setSummary] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    priority: \"Low\",\r\n    status: false,\r\n  });\r\n\r\n  const fetchTasks = () => {\r\n    fetch(\"http://localhost:8000/tasks/\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(setTasks);\r\n  };\r\n\r\n  const fetchSummary = () => {\r\n    fetch(\"http://localhost:8000/tasks-summary\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(setSummary);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    fetchSummary();\r\n  }, [token]);\r\n\r\n  const handleCreate = async (e) => {\r\n    e.preventDefault();\r\n    const res = await fetch(\"http://localhost:8000/tasks/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(formData),\r\n    });\r\n    if (res.ok) {\r\n      setFormData({ title: \"\", description: \"\", category: \"\", priority: \"Low\", status: false });\r\n      fetchTasks();\r\n      fetchSummary();\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await fetch(`http://localhost:8000/tasks/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    fetchTasks();\r\n    fetchSummary();\r\n  };\r\n\r\n  const handleToggleStatus = async (task) => {\r\n    await fetch(`http://localhost:8000/tasks/${task.id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({ ...task, status: !task.status }),\r\n    });\r\n    fetchTasks();\r\n    fetchSummary();\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h2 className=\"text-xl font-bold\">Your Tasks</h2>\r\n        <button onClick={logout} className=\"bg-red-500 text-white px-4 py-2\">Logout</button>\r\n      </div>\r\n\r\n      {summary && (\r\n        <div className=\"my-4\">\r\n          <p><strong>Summary:</strong></p>\r\n          <p>Total: {summary.total_tasks}, Completed: {summary.completed_tasks}, Completion Rate: {summary.percent_completed}%</p>\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleCreate} className=\"my-4 space-y-2\">\r\n        <input value={formData.title} onChange={(e) => setFormData({ ...formData, title: e.target.value })} placeholder=\"Title\" className=\"block border p-2 w-full\" required />\r\n        <input value={formData.description} onChange={(e) => setFormData({ ...formData, description: e.target.value })} placeholder=\"Description\" className=\"block border p-2 w-full\" />\r\n        <input value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })} placeholder=\"Category\" className=\"block border p-2 w-full\" />\r\n        <select value={formData.priority} onChange={(e) => setFormData({ ...formData, priority: e.target.value })} className=\"block border p-2 w-full\">\r\n          <option value=\"Low\">Low</option>\r\n          <option value=\"Medium\">Medium</option>\r\n          <option value=\"High\">High</option>\r\n        </select>\r\n        <button type=\"submit\" className=\"bg-green-500 text-white px-4 py-2\">Add Task</button>\r\n      </form>\r\n\r\n      <h3 className=\"font-semibold mt-4\">All Tasks</h3>\r\n      <ul className=\"mb-4\">\r\n        {tasks.map((task) => (\r\n          <li key={task.id} className=\"border-b py-2\">\r\n            <strong>{task.title}</strong> - {task.category} - {task.priority} - {task.status ? \"Done\" : \"Pending\"}\r\n            <div className=\"flex space-x-2 mt-1\">\r\n              <button onClick={() => handleToggleStatus(task)} className=\"text-sm text-blue-600\">Toggle</button>\r\n              <button onClick={() => handleDelete(task.id)} className=\"text-sm text-red-600\">Delete</button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n*/\n_s(Tasks, \"+YZYeWI3TW98GeyDn/TyuotMwU4=\", false, function () {\n  return [useAuth];\n});\n_c = Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useAuth","jsxDEV","_jsxDEV","Tasks","_s","BACKEND_URL","token","logout","tasks","setTasks","title","setTitle","description","setDescription","category","setCategory","status","setStatus","error","setError","fetchData","fetch","headers","Authorization","then","res","Error","ok","json","data","catch","err","message","handleAddTask","trim","alert","newTask","method","body","JSON","stringify","toggleComplete","task","id","deleteTask","taskId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","required","checked","onClick","length","map","_c","$RefreshReg$"],"sources":["E:/STS/frontend/src/pages/Tasks.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useAuth } from \"../utils/AuthContext\";\r\n\r\nexport default function Tasks() {\r\n  const BACKEND_URL = \"http://localhost:8000\";\r\n  const { token, logout } = useAuth();\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"personal\");\r\n  const [status, setStatus] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = useCallback(() => {\r\n    fetch(BACKEND_URL + \"/tasks/\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 401) {\r\n          logout();\r\n          throw new Error(\"Unauthorized\");\r\n        }\r\n        if (!res.ok) throw new Error(\"Failed to fetch tasks\");\r\n        return res.json();\r\n      })\r\n      .then((data) => setTasks(data))\r\n      .catch((err) => setError(err.message));\r\n  }, [token, logout]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const handleAddTask = () => {\r\n    if (!title.trim()) {\r\n      alert(\"Title is required\");\r\n      return;\r\n    }\r\n    const newTask = {\r\n      title,\r\n      description,\r\n      category,\r\n      status,\r\n    };\r\n    fetch(BACKEND_URL + \"/tasks/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify([newTask]), // backend expects an array\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 401) {\r\n          logout();\r\n          throw new Error(\"Unauthorized\");\r\n        }\r\n        if (!res.ok) throw new Error(\"Failed to add task\");\r\n        return res.json();\r\n      })\r\n      .then(() => {\r\n        setTitle(\"\");\r\n        setDescription(\"\");\r\n        setCategory(\"personal\");\r\n        setStatus(false);\r\n        fetchData();\r\n      })\r\n      .catch((err) => alert(err.message));\r\n  };\r\n\r\n  const toggleComplete = (task) => {\r\n    fetch(`${BACKEND_URL}/tasks/${task.id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({ ...task, status: !task.status }),\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 401) {\r\n          logout();\r\n          throw new Error(\"Unauthorized\");\r\n        }\r\n        if (!res.ok) throw new Error(\"Failed to update task\");\r\n        return res.json();\r\n      })\r\n      .then(fetchData)\r\n      .catch((err) => alert(err.message));\r\n  };\r\n\r\n  const deleteTask = (taskId) => {\r\n    fetch(`${BACKEND_URL}/tasks/${taskId}`, {\r\n      method: \"DELETE\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 401) {\r\n          logout();\r\n          throw new Error(\"Unauthorized\");\r\n        }\r\n        if (!res.ok) throw new Error(\"Failed to delete task\");\r\n        return res.json();\r\n      })\r\n      .then(fetchData)\r\n      .catch((err) => alert(err.message));\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Your Tasks</h2>\r\n\r\n      {/* Add Task Form */}\r\n      <div className=\"mb-6 p-4 border rounded shadow-sm bg-gray-50\">\r\n        <h3 className=\"text-xl mb-2 font-semibold\">Add New Task</h3>\r\n        <input\r\n          className=\"border p-2 mb-2 w-full\"\r\n          type=\"text\"\r\n          placeholder=\"Title *\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          className=\"border p-2 mb-2 w-full\"\r\n          type=\"text\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <select\r\n          className=\"border p-2 mb-2 w-full\"\r\n          value={category}\r\n          onChange={(e) => setCategory(e.target.value)}\r\n        >\r\n          <option value=\"personal\">Personal</option>\r\n          <option value=\"work\">Work</option>\r\n        </select>\r\n        <label className=\"inline-flex items-center mb-4\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={status}\r\n            onChange={(e) => setStatus(e.target.checked)}\r\n            className=\"mr-2\"\r\n          />\r\n          Completed\r\n        </label>\r\n        <button\r\n          onClick={handleAddTask}\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n        >\r\n          Add Task\r\n        </button>\r\n      </div>\r\n\r\n      {/* Error message */}\r\n      {error && <p className=\"text-red-600 mb-4\">{error}</p>}\r\n\r\n      {/* Task List */}\r\n      {tasks.length === 0 ? (\r\n        <p>No tasks found.</p>\r\n      ) : (\r\n        tasks.map((task) => (\r\n          <div\r\n            key={task.id}\r\n            className={`flex justify-between items-center mb-3 p-3 rounded ${\r\n              task.status ? \"bg-green-100\" : \"bg-red-100\"\r\n            }`}\r\n          >\r\n            <div>\r\n              <h4\r\n                className={`font-semibold ${\r\n                  task.status ? \"line-through\" : \"\"\r\n                }`}\r\n              >\r\n                {task.title} [{task.category}]\r\n              </h4>\r\n              <p>{task.description}</p>\r\n            </div>\r\n            <div>\r\n              <button\r\n                onClick={() => toggleComplete(task)}\r\n                className=\"mr-2 px-3 py-1 border rounded hover:bg-gray-200\"\r\n              >\r\n                {task.status ? \"Undo\" : \"Complete\"}\r\n              </button>\r\n              <button\r\n                onClick={() => deleteTask(task.id)}\r\n                className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n/*import React, { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../utils/AuthContext\";\r\n//import { useAuth } from \"../utils/AuthContext\";\r\n\r\n\r\nexport default function Tasks() {\r\n  const { token, logout } = useAuth();\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  const [summary, setSummary] = useState({ total_tasks: 0, completed_tasks: 0, percent_completed: 0 });\r\n  const [loading, setLoading] = useState(true);\r\n  const [newTaskTitle, setNewTaskTitle] = useState(\"\");\r\n  const [newTaskCategory, setNewTaskCategory] = useState(\"Low\");\r\n\r\n  const API_BASE = \"http://localhost:8000\"; // your backend URL\r\n\r\n  // Fetch tasks & summary\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const resTasks = await fetch(`${API_BASE}/tasks/`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      if (!resTasks.ok) throw new Error(\"Failed to fetch tasks\");\r\n      const dataTasks = await resTasks.json();\r\n\r\n      const resSummary = await fetch(`${API_BASE}/tasks-summary`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      if (!resSummary.ok) throw new Error(\"Failed to fetch summary\");\r\n      const dataSummary = await resSummary.json();\r\n\r\n      setTasks(dataTasks);\r\n      setSummary(dataSummary);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Toggle task status (complete/incomplete)\r\n  const toggleStatus = async (task) => {\r\n    try {\r\n      const updatedTask = {\r\n        ...task,\r\n        status: !task.status,\r\n      };\r\n      const res = await fetch(`${API_BASE}/tasks/${task.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Authorization\": `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(updatedTask),\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to update task\");\r\n      await fetchData();\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  // Delete task\r\n  const deleteTask = async (taskId) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this task?\")) return;\r\n    try {\r\n      const res = await fetch(`${API_BASE}/tasks/${taskId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to delete task\");\r\n      await fetchData();\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  // Add new task\r\n  const addTask = async () => {\r\n    if (!newTaskTitle.trim()) {\r\n      alert(\"Please enter a task title\");\r\n      return;\r\n    }\r\n    try {\r\n      const newTask = {\r\n        title: newTaskTitle,\r\n        description: \"\",\r\n        category: newTaskCategory,\r\n        status: false,\r\n        priority: newTaskCategory,\r\n      };\r\n      const res = await fetch(`${API_BASE}/tasks/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newTask),\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to add task\");\r\n      setNewTaskTitle(\"\");\r\n      setNewTaskCategory(\"Low\");\r\n      await fetchData();\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div style={{ padding: 20, maxWidth: 700, margin: \"auto\" }}>\r\n      <header style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        <h1>Smart Task Tracker</h1>\r\n        <button onClick={logout} style={{ padding: \"6px 12px\" }}>Logout</button>\r\n      </header>\r\n\r\n      <section style={{ marginTop: 20 }}>\r\n        <h2>Summary</h2>\r\n        <p>Total Tasks: {summary.total_tasks}</p>\r\n        <p>Completed: {summary.completed_tasks}</p>\r\n        <p>Completion Rate: {summary.percent_completed.toFixed(2)}%</p>\r\n      </section>\r\n\r\n      <section style={{ marginTop: 30 }}>\r\n        <h2>Add Task</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task title\"\r\n          value={newTaskTitle}\r\n          onChange={(e) => setNewTaskTitle(e.target.value)}\r\n          style={{ padding: 6, width: \"60%\", marginRight: 10 }}\r\n        />\r\n        <select\r\n          value={newTaskCategory}\r\n          onChange={(e) => setNewTaskCategory(e.target.value)}\r\n          style={{ padding: 6, marginRight: 10 }}\r\n        >\r\n          <option>Low</option>\r\n          <option>Medium</option>\r\n          <option>High</option>\r\n        </select>\r\n        <button onClick={addTask} style={{ padding: \"6px 12px\" }}>Add Task</button>\r\n      </section>\r\n\r\n      <section style={{ marginTop: 40 }}>\r\n        <h2>All Tasks</h2>\r\n        {tasks.length === 0 && <p>No tasks found.</p>}\r\n        {tasks.map((task) => (\r\n          <div\r\n            key={task.id}\r\n            style={{\r\n              border: \"1px solid #ddd\",\r\n              padding: 12,\r\n              marginBottom: 10,\r\n              borderRadius: 4,\r\n              backgroundColor: task.status ? \"#d4edda\" : \"#f8d7da\",\r\n            }}\r\n          >\r\n            <h3>{task.title}</h3>\r\n            <p><strong>Category:</strong> {task.category}</p>\r\n            <p><strong>Status:</strong> {task.status ? \"Done\" : \"Pending\"}</p>\r\n\r\n            <button\r\n              onClick={() => toggleStatus(task)}\r\n              style={{ marginRight: 10, padding: \"4px 10px\" }}\r\n            >\r\n              {task.status ? \"Mark Incomplete\" : \"Mark Complete\"}\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => deleteTask(task.id)}\r\n              style={{ padding: \"4px 10px\", backgroundColor: \"#dc3545\", color: \"#fff\", border: \"none\" }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </section>\r\n    </div>\r\n  );\r\n}*/\r\n\r\n/*import React, { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../utils/AuthContext\";\r\n\r\nexport default function Tasks() {\r\n  const { token, logout } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [summary, setSummary] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    priority: \"Low\",\r\n    status: false,\r\n  });\r\n\r\n  const fetchTasks = () => {\r\n    fetch(\"http://localhost:8000/tasks/\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(setTasks);\r\n  };\r\n\r\n  const fetchSummary = () => {\r\n    fetch(\"http://localhost:8000/tasks-summary\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(setSummary);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    fetchSummary();\r\n  }, [token]);\r\n\r\n  const handleCreate = async (e) => {\r\n    e.preventDefault();\r\n    const res = await fetch(\"http://localhost:8000/tasks/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(formData),\r\n    });\r\n    if (res.ok) {\r\n      setFormData({ title: \"\", description: \"\", category: \"\", priority: \"Low\", status: false });\r\n      fetchTasks();\r\n      fetchSummary();\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await fetch(`http://localhost:8000/tasks/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    fetchTasks();\r\n    fetchSummary();\r\n  };\r\n\r\n  const handleToggleStatus = async (task) => {\r\n    await fetch(`http://localhost:8000/tasks/${task.id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({ ...task, status: !task.status }),\r\n    });\r\n    fetchTasks();\r\n    fetchSummary();\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h2 className=\"text-xl font-bold\">Your Tasks</h2>\r\n        <button onClick={logout} className=\"bg-red-500 text-white px-4 py-2\">Logout</button>\r\n      </div>\r\n\r\n      {summary && (\r\n        <div className=\"my-4\">\r\n          <p><strong>Summary:</strong></p>\r\n          <p>Total: {summary.total_tasks}, Completed: {summary.completed_tasks}, Completion Rate: {summary.percent_completed}%</p>\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleCreate} className=\"my-4 space-y-2\">\r\n        <input value={formData.title} onChange={(e) => setFormData({ ...formData, title: e.target.value })} placeholder=\"Title\" className=\"block border p-2 w-full\" required />\r\n        <input value={formData.description} onChange={(e) => setFormData({ ...formData, description: e.target.value })} placeholder=\"Description\" className=\"block border p-2 w-full\" />\r\n        <input value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })} placeholder=\"Category\" className=\"block border p-2 w-full\" />\r\n        <select value={formData.priority} onChange={(e) => setFormData({ ...formData, priority: e.target.value })} className=\"block border p-2 w-full\">\r\n          <option value=\"Low\">Low</option>\r\n          <option value=\"Medium\">Medium</option>\r\n          <option value=\"High\">High</option>\r\n        </select>\r\n        <button type=\"submit\" className=\"bg-green-500 text-white px-4 py-2\">Add Task</button>\r\n      </form>\r\n\r\n      <h3 className=\"font-semibold mt-4\">All Tasks</h3>\r\n      <ul className=\"mb-4\">\r\n        {tasks.map((task) => (\r\n          <li key={task.id} className=\"border-b py-2\">\r\n            <strong>{task.title}</strong> - {task.category} - {task.priority} - {task.status ? \"Done\" : \"Pending\"}\r\n            <div className=\"flex space-x-2 mt-1\">\r\n              <button onClick={() => handleToggleStatus(task)} className=\"text-sm text-blue-600\">Toggle</button>\r\n              <button onClick={() => handleDelete(task.id)} className=\"text-sm text-red-600\">Delete</button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}